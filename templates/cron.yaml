{{- if .Values.persistence.snapshots.enabled }}
{{- if .Values.persistence.snapshots.uploadToIpfs }}
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ .Release.Name }}-internal-snapshot-creator
spec:
  schedule: "0 0 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: {{ .Release.Name }}-{{ .Values.serviceAccount.name }}
          initContainers:
          - name: exporter
            image: bitnami/kubectl
            args:
            - exec
            - {{ .Release.Name }}-lotus-0 
            - -c 
            - filecoin 
            - --
            - lotus
            - chain
            - export 
            - /data/ipfs/lotus-new.car  
          containers:
          - name: sharer
            image: bitnami/kubectl
            args:
            - exec
            - -n {{ .Release.Namespace }}              
            - {{ .Release.Name }}
            - -c filecoin-ipfs
            - --
            - mkdir -p /data/ipfs/snapshots && mv /data/ipfs/lotus-new.car /data/ipfs/snapshots/lotus.car && ipfs add -r /data/ipfs/snapshots && ipfs pin -r /data/ipfs/snapshots
          restartPolicy: Never
{{- end }}
{{- if .Values.persistence.snapshots.automation.creation.enabled }}
---
apiVersion: v1
data:
  snapshot-template.yaml: |
    apiVersion: snapshot.storage.k8s.io/v1beta1
    kind: VolumeSnapshot
    metadata:
      generateName: {{ .Release.Name }}-
      namespace: {{ .Release.Namespace }} 
    spec:
      volumeSnapshotClassName: csi-aws-vsc
      source:
        persistentVolumeClaimName: vol-lotus-{{ .Release.Name }}-lotus-0
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-snapshot-cm

---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ .Release.Name }}-snapshot-creator
spec:
  schedule: "0 0 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: {{ .Release.Name }}-{{ .Values.serviceAccount.name }}
          containers:
          - name: creator
            image: bitnami/kubectl
            args:
            - create
            - -f
            - /tmp/creator/snapshot-template.yaml
            volumeMounts:
            - name: {{ .Release.Name }}-snapshot-cm
              mountPath: "/tmp/creator"
              readOnly: true
          restartPolicy: Never
          volumes:
          - name: {{ .Release.Name }}-snapshot-cm
            configMap:
              name: {{ .Release.Name }}-snapshot-cm
{{- end }}

{{- if .Values.persistence.snapshots.automation.deletion.enabled }}
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ .Release.Name }}-snapshot-deleter
spec:
  schedule: "0 1 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: {{ .Release.Name }}-{{ .Values.serviceAccount.name }}
          containers:
          - name: deleter
            image: bitnami/kubectl
            command:
            - sh
            - -c
            - export ITEMS=$(kubectl get --sort-by .metadata.creationTimestamp -n {{ .Release.Namespace }} --no-headers volumesnapshots | awk '/{{ .Release.Name }}-/{print $1}' | awk '{start}NR=={{ add .Values.persistence.snapshots.automation.deletion.retention.count  1 }}{print $1}') && ([ ! -z "$ITEMS" ] && kubectl delete volumesnapshots $ITEMS || true)
          restartPolicy: Never
{{- end }}
{{- end }}
