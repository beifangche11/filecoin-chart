# Default values for chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: openworklabs/lotus:ntwk-calibration-8.8.0
  pullPolicy: IfNotPresent #Always

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # The name of the service account to use. Will be prefixed with release name
  name: acc

podSecurityContext:
  fsGroup: 2000

securityContext:
  # capabilities:
  #   drop:
  #   - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: false
  runAsUser: 1000

service:
  type: ClusterIP
  port: 1234
  targetPort: 1234

ingress:
  enabled: true
  host: dev.node.glif.io
  annotations:
    nginx.ingress.kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Length,Content-Range,Range"
    nginx.ingress.kubernetes.io/enable-rewrite-log: "true"
  # nginx.ingress.kubernetes.io/server-alias: "_"
    nginx.ingress.kubernetes.io/enable-modsecurity: "true"
    nginx.ingress.kubernetes.io/modsecurity-snippet: |
      SecRuleEngine On
      SecDebugLog /tmp/modsec_debug.log
  lotus:
    enabled: true
    annotations:
# Uncomment following annotations to change access mode from JWT-based to Firewall-based. Also replace <JWT> with admin JWT token of the node and 1.2.3.4/32 to your IP address.
      # nginx.ingress.kubernetes.io/whitelist-source-range: 1.2.3.4/32
      # nginx.ingress.kubernetes.io/configuration-snippet: |
      #       proxy_set_header Authorization "Bearer <JWT>";
  ipfs:
    enabled: false
  powergate:
    enabled: false

init:
  sync:
    enabled: true
  import:
    enabled: false
    # ideally a shared volume containing chain dump
    volume: {}
      #- name: filecoin-chain-vol
      #  persistentVolumeClaim:
      #    claimName: efs-claim

secretVolume:
  enabled: false

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
#  lotus:
#    requests:
#      cpu: 800m
#      memory: 3Gi
#    limits:
#      cpu: 2500m
#      memory: 6Gi
#  ipfs:
#    requests:
#      cpu: 1000m
#      memory: 2Gi
#    limits:
#      cpu: 3000m
#      memory: 3Gi
#  powergate:
#    requests:
#      cpu: 1000m
#      memory: 2Gi
#    limits:
#      cpu: 2000m
#      memory: 3Gi

persistence:
# If persistence is set to false no persistent volumes will be created
  enabled: true
  snapshots:
# If snapshots are enabled - the PV will be deployed with ebs-sc class unless custom class is specified
    enabled: true
# If automation is enabled - several CronJobs will be created to create snapshots and/or delete old snapshots automatically.
    automation:
      deletion: true
      creation: true
# A number of snapshots to keep when automatic deletion is enabled
      retain:
        count: 2
# If restore is enabled the snapshot name must be specified. Charts will attempt to find the existing snapshot with this name and create a PV from that snapshot.
    restore: 
      enabled: false
      #name: snapshot-blah
# For each of the deployed services one can specify the disk size, custom disk type and access mode.
  lotus:
    size: "200Gi"
    storageClassName: gp2
    accessModes:
      - ReadWriteOnce
#  ipfs:
#    size: "200Gi"
#    storageClassName: gp2
#    accessModes:
#      - ReadWriteOnce
#  powergate:
#    size: "200Gi"
#    storageClassName: gp2
#    accessModes:
#      - ReadWriteOnce

# Defines whether Powergate should be deployed with Lotus node. Note that IPFS must be enabled if Powergate is enabled.
Powergate:
  enabled: false

# Defines whether IPFS should be deployed with Lotus node.
IPFS:
  enabled: false
  
nodeSelector: {}

tolerations: []

affinity: {}
